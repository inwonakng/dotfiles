set encoding=utf-8
syntax on
set number relativenumber
set laststatus=2
set nobackup
set nowritebackup
filetype plugin indent on
set clipboard=unnamed
set hlsearch

highlight Normal ctermbg=None
highlight LineNr ctermfg=DarkGrey

" plugins
call plug#begin()
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'jpalardy/vim-slime'
call plug#end()

" Turn off highlighting after search [https://stackoverflow.com/questions/4372660/get-rid-of-vims-highlight-after-searching-text]
nnoremap <esc> :noh<return><esc>

" Keep selection after indenting
vnoremap < <gv
vnoremap > >gv

" Movement between panes
nmap <C-h> <C-w>h
nmap <C-j> <C-w>j
nmap <C-k> <C-w>k
nmap <C-l> <C-w>l

" fix tabs
set tabstop=4
set shiftwidth=4
set expandtab

" turn off wrap
set nowrap

" set leader key
let mapleader = " "

" quit completely
nmap <leader>qq :qa<CR>

" pane commands
nmap <leader>w\ :vsp<CR>
nmap <leader>w- :sp<CR>
nmap <leader>wd :q<CR>
nmap <leader>wo :only<CR>

" buffer commands
nmap <leader>bd :q<CR>

" tab commands
nmap <leader><Tab><Tab> :tabnew<CR>
nmap <leader><Tab>] :tabnext<CR>
nmap <leader><Tab>[ :tabprev<CR>
nmap <leader><Tab>s :tab sb<CR>

nmap <leader><Tab>d :tabclose<CR>
nmap <leader><Tab>o :tabonly<CR>

" fzf stuff
nmap <leader>ff :Files<CR>
nmap <leader>fb :Buffers<CR>
nmap <leader>sb :BLines<CR>
nmap <leader>sg :Rg<CR>

" set up vim-slime
let g:slime_no_mappings = 1
let g:slime_target = "tmux"
let g:slime_cell_delimiter = "#%%"
let g:slime_bracketed_paste = 1
let g:slime_python_ipython = 1
nmap <leader>rr <Plug>SlimeSendCell<BAR>/^#%%<CR>
nmap <leader>rc :SlimeConfig<CR>
vmap <leader>rr :<C-u>'<,'>SlimeSend<CR>

" utility command for copying the path of current buffer file
command! YankFilePath let @+ = expand('%:p')
" For relative paths
command! YankRelativeFilePath call YankRelativeFilePathFunc()

function! YankRelativeFilePathFunc()
    let full_path = expand('%:p')
    let cwd = getcwd()
    let relative_path = fnamemodify(full_path, ':.' . cwd . ':~:.')
    let @+ = relative_path
endfunction

nnoremap yP :YankFilePath<CR>
nnoremap yp :YankRelativeFilePath<CR>
